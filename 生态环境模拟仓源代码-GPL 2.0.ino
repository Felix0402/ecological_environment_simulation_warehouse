/*!
 * MindPlus
 * uno
 *
 */
#include <DFRobot_SSD1306_I2C.h>

// 动态变量
String         mind_s_fan;
volatile float mind_n_days, mind_n_Screen_refresh_rate;
// 静态常量
const chCode chBuf[] = {
  {0x6b63,0xe6ada3,0xD5FD,{0x00,0x00,0x7f,0xfc,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0x11,0x00,0x11,0xf8,0x11,0x00,0x11,0x00,0x11,0x00,0x11,0x00,0x11,0x00,0x11,0x00,0xff,0xfe,0x00,0x00}},
  {0x5728,0xe59ca8,0xD4DA,{0x02,0x00,0x02,0x00,0x04,0x00,0xff,0xfe,0x08,0x00,0x08,0x40,0x10,0x40,0x30,0x40,0x57,0xfc,0x90,0x40,0x10,0x40,0x10,0x40,0x10,0x40,0x10,0x40,0x1f,0xfe,0x10,0x00}},
  {0x5f00,0xe5bc80,0xBFAA,{0x00,0x00,0x7f,0xfc,0x08,0x20,0x08,0x20,0x08,0x20,0x08,0x20,0x08,0x20,0xff,0xfe,0x08,0x20,0x08,0x20,0x08,0x20,0x08,0x20,0x10,0x20,0x10,0x20,0x20,0x20,0x40,0x20}},
  {0x673a,0xe69cba,0xBBFA,{0x10,0x00,0x11,0xf0,0x11,0x10,0x11,0x10,0xfd,0x10,0x11,0x10,0x31,0x10,0x39,0x10,0x55,0x10,0x55,0x10,0x91,0x10,0x11,0x12,0x11,0x12,0x12,0x12,0x12,0x0e,0x14,0x00}},
  {0x7cfb,0xe7b3bb,0xCFB5,{0x00,0xf8,0x3f,0x00,0x04,0x00,0x08,0x20,0x10,0x40,0x3f,0x80,0x01,0x00,0x06,0x10,0x18,0x08,0x7f,0xfc,0x01,0x04,0x09,0x20,0x11,0x10,0x21,0x08,0x45,0x04,0x02,0x00}},
  {0x7edf,0xe7bb9f,0xCDB3,{0x10,0x40,0x10,0x20,0x20,0x20,0x23,0xfe,0x48,0x40,0xf8,0x88,0x11,0x04,0x23,0xfe,0x40,0x92,0xf8,0x90,0x40,0x90,0x00,0x90,0x19,0x12,0xe1,0x12,0x42,0x0e,0x04,0x00}},
  {0x521d,0xe5889d,0xB3F5,{0x20,0x00,0x10,0x00,0x01,0xfc,0xfc,0x44,0x08,0x44,0x10,0x44,0x10,0x44,0x34,0x44,0x58,0x44,0x94,0x44,0x14,0x44,0x10,0x84,0x10,0x84,0x11,0x04,0x12,0x28,0x14,0x10}},
  {0x59cb,0xe5a78b,0xCABC,{0x10,0x20,0x10,0x20,0x10,0x20,0x10,0x40,0xfc,0x48,0x24,0x84,0x25,0xfe,0x24,0x82,0x24,0x00,0x48,0xfc,0x28,0x84,0x10,0x84,0x28,0x84,0x44,0x84,0x80,0xfc,0x00,0x84}},
  {0x5316,0xe58c96,0xBBAF,{0x08,0x80,0x08,0x80,0x08,0x84,0x10,0x88,0x10,0x90,0x30,0xa0,0x30,0xc0,0x50,0x80,0x91,0x80,0x12,0x80,0x14,0x80,0x10,0x82,0x10,0x82,0x10,0x82,0x10,0x7e,0x10,0x00}},
  {0x542f,0xe590af,0xC6F4,{0x01,0x00,0x00,0x80,0x1f,0xfc,0x10,0x04,0x10,0x04,0x10,0x04,0x1f,0xfc,0x10,0x00,0x10,0x00,0x10,0x00,0x17,0xfc,0x24,0x04,0x24,0x04,0x44,0x04,0x87,0xfc,0x04,0x04}},
  {0x52a8,0xe58aa8,0xB6AF,{0x00,0x40,0x00,0x40,0x7c,0x40,0x00,0x40,0x01,0xfc,0x00,0x44,0xfe,0x44,0x20,0x44,0x20,0x44,0x20,0x84,0x48,0x84,0x44,0x84,0xfd,0x04,0x45,0x04,0x02,0x28,0x04,0x10}},
  {0x5b8c,0xe5ae8c,0xCDEA,{0x02,0x00,0x01,0x00,0x7f,0xfe,0x40,0x02,0x80,0x04,0x1f,0xf0,0x00,0x00,0x00,0x00,0x7f,0xfc,0x04,0x40,0x04,0x40,0x04,0x40,0x08,0x44,0x08,0x44,0x10,0x44,0x60,0x3c}},
  {0x6210,0xe68890,0xB3C9,{0x00,0x50,0x00,0x48,0x00,0x40,0x3f,0xfe,0x20,0x40,0x20,0x40,0x20,0x44,0x3e,0x44,0x22,0x44,0x22,0x28,0x22,0x28,0x22,0x12,0x2a,0x32,0x44,0x4a,0x40,0x86,0x81,0x02}},
  {0x5237,0xe588b7,0xCBA2,{0x00,0x02,0x3f,0xc2,0x20,0x42,0x20,0x42,0x3f,0xd2,0x22,0x12,0x22,0x12,0x22,0x12,0x3f,0xd2,0x52,0x52,0x52,0x52,0x52,0x52,0x93,0x42,0x12,0x82,0x02,0x0a,0x02,0x04}},
  {0x65b0,0xe696b0,0xD0C2,{0x10,0x00,0x08,0x04,0x7f,0x78,0x00,0x40,0x22,0x40,0x14,0x40,0xff,0x7e,0x08,0x48,0x08,0x48,0x7f,0x48,0x08,0x48,0x2a,0x48,0x49,0x48,0x88,0x88,0x28,0x88,0x11,0x08}},
  {0x7387,0xe78e87,0xC2CA,{0x02,0x00,0x01,0x00,0x7f,0xfc,0x02,0x00,0x44,0x44,0x2f,0x88,0x11,0x10,0x22,0x48,0x4f,0xe4,0x00,0x20,0x01,0x00,0xff,0xfe,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00}},
  {0x79d2,0xe7a792,0xC3EB,{0x08,0x20,0x1c,0x20,0xf0,0x20,0x10,0xa8,0x10,0xa4,0xfc,0xa2,0x11,0x22,0x31,0x20,0x3a,0x24,0x54,0x24,0x54,0x28,0x90,0x08,0x10,0x10,0x10,0x20,0x10,0xc0,0x13,0x00}},
  {0x6b21,0xe6aca1,0xB4CE,{0x00,0x80,0x40,0x80,0x20,0x80,0x20,0xfc,0x01,0x04,0x09,0x08,0x0a,0x40,0x14,0x40,0x10,0x40,0xe0,0xa0,0x20,0xa0,0x21,0x10,0x21,0x10,0x22,0x08,0x24,0x04,0x08,0x02}},
  {0x751f,0xe7949f,0xC9FA,{0x01,0x00,0x11,0x00,0x11,0x00,0x11,0x00,0x3f,0xfc,0x21,0x00,0x41,0x00,0x81,0x00,0x01,0x00,0x3f,0xf8,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0xff,0xfe,0x00,0x00}},
  {0x6001,0xe68081,0xCCAC,{0x01,0x00,0x01,0x00,0x7f,0xfc,0x01,0x00,0x02,0x80,0x04,0x40,0x0a,0x20,0x31,0x18,0xc0,0x06,0x01,0x00,0x08,0x88,0x48,0x84,0x48,0x12,0x48,0x12,0x87,0xf0,0x00,0x00}},
  {0x73af,0xe78eaf,0xBBB7,{0x00,0x00,0x00,0x00,0xfd,0xfe,0x10,0x10,0x10,0x10,0x10,0x20,0x10,0x20,0x7c,0x68,0x10,0xa4,0x11,0x22,0x12,0x22,0x10,0x20,0x1c,0x20,0xe0,0x20,0x40,0x20,0x00,0x20}},
  {0x5883,0xe5a283,0xBEB3,{0x20,0x80,0x20,0x40,0x23,0xf8,0x21,0x10,0xf8,0xa0,0x27,0xfe,0x20,0x00,0x23,0xf8,0x22,0x08,0x23,0xf8,0x22,0x08,0x3b,0xf8,0xe1,0x20,0x41,0x22,0x02,0x22,0x0c,0x1e}},
  {0x6a21,0xe6a8a1,0xC4A3,{0x11,0x10,0x11,0x10,0x17,0xfc,0x11,0x10,0xfc,0x00,0x13,0xf8,0x32,0x08,0x3b,0xf8,0x56,0x08,0x53,0xf8,0x90,0x40,0x17,0xfc,0x10,0xa0,0x11,0x10,0x12,0x08,0x14,0x06}},
  {0x62df,0xe68b9f,0xC4E2,{0x10,0x08,0x10,0x88,0x10,0x48,0x12,0x28,0xfa,0x28,0x12,0x08,0x12,0x08,0x1a,0x08,0x32,0x08,0xd2,0x08,0x12,0x10,0x12,0x98,0x13,0x24,0x12,0x24,0x50,0x42,0x20,0x82}},
  {0x4ed3,0xe4bb93,0xB2D6,{0x01,0x00,0x01,0x00,0x02,0x80,0x04,0x40,0x08,0x20,0x30,0x18,0xc0,0x06,0x0f,0xe0,0x08,0x20,0x08,0x20,0x08,0xa0,0x08,0x44,0x08,0x04,0x08,0x04,0x07,0xfc,0x00,0x00}},
  {0x957f,0xe995bf,0xB3A4,{0x08,0x00,0x08,0x10,0x08,0x20,0x08,0x40,0x08,0x80,0x09,0x00,0x08,0x00,0xff,0xfe,0x0a,0x00,0x09,0x00,0x08,0x80,0x08,0x40,0x09,0x20,0x0a,0x18,0x0c,0x06,0x08,0x00}},
  {0x5929,0xe5a4a9,0xCCEC,{0x00,0x00,0x3f,0xf8,0x01,0x00,0x01,0x00,0x01,0x00,0x01,0x00,0xff,0xfe,0x01,0x00,0x02,0x80,0x02,0x80,0x04,0x40,0x04,0x40,0x08,0x20,0x10,0x10,0x20,0x08,0xc0,0x06}},
  {0x6570,0xe695b0,0xCAFD,{0x08,0x20,0x49,0x20,0x2a,0x20,0x08,0x3e,0xff,0x44,0x2a,0x44,0x49,0x44,0x88,0xa4,0x10,0x28,0xfe,0x28,0x22,0x10,0x42,0x10,0x64,0x28,0x18,0x28,0x34,0x44,0xc2,0x82}}
};
// 创建对象
DFRobot_SSD1306_I2C oled12864;


// 主程序开始
void setup() {
  oled12864.setChCode(chBuf);
  mind_n_days = 0;
  mind_n_Screen_refresh_rate = 0.5;
  mind_s_fan = "FALSE";
  oled12864.begin(0x3c);
  oled12864.setCursorLine(1);
  oled12864.printLine("正在开机");
  delay(1000);
  oled12864.fillScreen(0);
  oled12864.setCursorLine(1);
  oled12864.printLine("系统正在初始化");
  delay(1000);
  oled12864.fillScreen(0);
  oled12864.setCursorLine(1);
  oled12864.printLine("启动完成");
  oled12864.setCursorLine(2);
  oled12864.printLine("系统刷新率");
  oled12864.setCursorLine(3);
  oled12864.printLine((String(mind_n_Screen_refresh_rate) + String("秒/次")));
  delay(2000);
  oled12864.fillScreen(0);
}
void loop() {
  oled12864.setCursorLine(1);
  oled12864.printLine("生态环境模拟仓");
  oled12864.setCursorLine(2);
  oled12864.printLine("生长天数");
  oled12864.setCursorLine(3);
  oled12864.printLine(mind_n_days);
  oled12864.setCursorLine(4);
  oled12864.printLine("天");
  delay(mind_n_Screen_refresh_rate * 1000);
  oled12864.fillScreen(0);
  if ((analogRead(A0)<1000)) {
    digitalWrite(2, HIGH);
    digitalWrite(4, LOW);
  }
  else {
    digitalWrite(2, LOW);
    digitalWrite(4, HIGH);
  }
  if ((analogRead(A1)>1000)) {
    if ((mind_s_fan==String("TURE"))) {
      mind_s_fan = "FALSE";
    }
    else {
      mind_s_fan = "TURE";
    }
  }
  if ((mind_s_fan==String("TURE"))) {
    digitalWrite(7, HIGH);
  }
  else {
    digitalWrite(7, LOW);
  }
  if ((analogRead(A2)<1000)) {
    mind_n_days += 1;
  }
}
